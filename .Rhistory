plot( NULL , xlim=c(1,nd) , ylim=c(0,1) , ylab="prob use contraception" ,
xlab="district" )
points( 1:nd , p1 , pch=16 , col='blue' )
points( 1:nd , p2, col='red')
#abline( h=mean(inv_logit(post2$a_bar)) , lty=2 )
post1 <- extract.samples( model_q2_1_fit )
post2 <- extract.samples( model_q2_2_fit )
p1 <- apply( post1$dD, 2 , mean )
p2 <- apply( post2$dDk, 2 , mean )
nd <- max(dat_list_q2$D)
plot( NULL  , ylab="prob use contraception" ,
xlab="district" )
post1 <- extract.samples( model_q2_1_fit )
post2 <- extract.samples( model_q2_2_fit )
p1 <- apply( post1$dD, 2 , mean )
p2 <- apply( post2$dDk, 2 , mean )
nd <- max(dat_list_q2$D)
plot( NULL , xlim=c(1,nd) , ylim=c(-1,1) , ylab="prob use contraception" ,
xlab="district" )
points( 1:nd , p1 , pch=16 , col='blue' )
points( 1:nd , p2, col='red')
#abline( h=mean(inv_logit(post2$a_bar)) , lty=2 )
post1 <- extract.samples( model_q2_1_fit )
post2 <- extract.samples( model_q2_2_fit )
p1 <- apply( post1$dD, 2 , mean )
p2 <- apply( post2$dDk, 2 , mean )
nd <- max(dat_list_q2$D)
plot( NULL , xlim=c(1,nd) , ylim=c(-1,1) , ylab="prob use contraception" ,
xlab="district" )
points( 1:nd , inv_logit(p1) , pch=16 , col='blue' )
points( 1:nd , inv_logit(p2), col='red')
#abline( h=mean(inv_logit(post2$a_bar)) , lty=2 )
data(Trolley)
d_q3 <- Trolley
d_q3
data(Trolley)
d_q2 <- Trolley
edu_levels <- c(6, 1, 8, 4, 7, 2, 5, 3)
d_q2$edu_new <- edu_levels[d_q2$edu]
dat_list_q3 <- list(
response=d_q2$response,
A=d_q2$action,
I=d_q2$intention,
C=d_q2$contact,
IA=d_q2$intention * d_q2$action,
IC=d_q2$intention * d_q2$contact,
E=as.integer(d_q2$edu_new),
F=1-d_q2$male,
AGE=standardize(d_q2$age),
K=7,
N=9930
)
d_q2
d_q2
d_q2$id
unique(d_q2$id)
as.numeric(factor(d_q2$id))
data(Trolley)
d_q3 <- Trolley
edu_levels <- c(6, 1, 8, 4, 7, 2, 5, 3)
d_q3$edu_new <- edu_levels[d_q3$edu]
dat_list_q3 <- list(
response=d_q3$response,
P=as.numeric(factor(d_q3$id)),
A=d_q3$action,
I=d_q3$intention,
C=d_q3$contact,
IA=d_q3$intention * d_q3$action,
IC=d_q3$intention * d_q3$contact,
E=as.integer(d_q3$edu_new),
F=1-d_q3$male,
AGE=standardize(d_q3$age),
K=7,
N=9930
)
max(as.numeric(factor(d_q3$id)))
data(Trolley)
d_q3 <- Trolley
edu_levels <- c(6, 1, 8, 4, 7, 2, 5, 3)
d_q3$edu_new <- edu_levels[d_q3$edu]
dat_list_q3 <- list(
response=d_q3$response,
P=as.numeric(factor(d_q3$id)),
A=d_q3$action,
I=d_q3$intention,
C=d_q3$contact,
IA=d_q3$intention * d_q3$action,
IC=d_q3$intention * d_q3$contact,
E=as.integer(d_q3$edu_new),
F=1-d_q3$male,
AGE=standardize(d_q3$age),
K=7,
NP=331,
N=9930
)
model_q3_1_fit <- stan(file='week08/08_q3_1.stan', data=dat_list_q3, cores=4)
View(d_q3)
model_q3_1_fit
data(Trolley)
d_q3 <- Trolley
edu_levels <- c(6, 1, 8, 4, 7, 2, 5, 3)
d_q3$edu_new <- edu_levels[d_q3$edu]
dat_list_q3 <- list(
response=d_q3$response,
P=as.numeric(factor(d_q3$id)),
A=d_q3$action,
I=d_q3$intention,
C=d_q3$contact,
IA=d_q3$intention * d_q3$action,
IC=d_q3$intention * d_q3$contact,
E=as.integer(d_q3$edu_new),
F=1-d_q3$male,
AGE=standardize(d_q3$age),
K=7,
NP=331,
N=9930
)
model_q3_1_fit <- stan(file='week08/08_q3_1.stan', data=dat_list_q3, cores=4)
model_q3_1_fit
model_q3_2_fit <- stan(file='week08/08_q3_2.stan', data=dat_list_q3, cores=4)
model_q3_2_fit
loo(model_q3_1_fit)
loo(model_q3_2_fit)
compare(model_q3_1_fit, model_q3_2_fit)
unlink('my_week08_cache', recursive = TRUE)
tinytex::install_tinytex()
tinytex:::is_tinytex() is TRUE.
Warning message:
tinytex:::is_tinytex()
install.packages(c("coda","mvtnorm","devtools","loo","dagitty"))
devtools::install_github("rmcelreath/rethinking")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R')
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R')
devtools::install_github("rmcelreath/rethinking")
install.packages('cachem')
devtools::install_github("rmcelreath/rethinking")
library(cachem)
library(rethinking)
library(dplyr)
?loo::compare
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
loo_compare(tutorial_00, tutorial_01)
loo::loo_compare(tutorial_00, tutorial_01)
loo::loo_compare(loo(tutorial_00), loo(tutorial_01))
sum(abs(a_real - a1))
sum(abs(a_real - a2))
sum(abs(b_real - b1))
sum(abs(b_real - b2))
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
a_real <- vary_effects[, 1]
b_real <- vary_effects[, 2]
a1 <- sapply( 1:N_cafes ,
function(i) mean(wait[cafe_id==i & afternoon==0]) )
b1 <- sapply( 1:N_cafes ,
function(i) mean(wait[cafe_id==i & afternoon==1]) ) - a1
a2 <- estimations[, 1]
b2 <- estimations[, 2]
# plot both and connect with lines
plot( a1 , b1 , xlab="intercept" , ylab="slope" ,
pch=16 , col=rangi2 , ylim=c( min(b1)-0.1 , max(b1)+0.1 ) ,
xlim=c( min(a1)-0.1 , max(a1)+0.1 ) )
points( a2 , b2 , pch=1 )
for ( i in 1:N_cafes ) lines( c(a1[i],a2[i]) , c(b1[i],b2[i]) )
warnings()
rho
rho <- (-0.7) # 0.7
Mu <- c(a, b)
cov_ab <- sigma_a * sigma_b * rho
N_cafes <- 20
library(MASS)
sigmas <- c(sigma_a, sigma_b)
Sigma <- diag(sigmas) %*% matrix(c(1, rho, rho, 1), nrow= 2) %*% diag(sigmas)
Sigma
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
sum(abs(a_real - a1))
sum(abs(a_real - a2))
sum(abs(b_real - b1))
sum(abs(b_real - b2))
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
source('C:/Users/Orcun Gumus/OneDrive - McKinsey & Company/Desktop/statrethinking_winter2019/my_week09.R', echo=TRUE)
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(dagitty)
library(ggdag)
library(rstan)
data(bangladesh)
d_q1 <- bangladesh
d_q1$district_id <- as.integer(as.factor(d_q2$district))
data(bangladesh)
d_q1 <- bangladesh
d_q1$district_id <- as.integer(as.factor(d_q1$district))
dat_list_q1 <- list(
C=d_q1$use.contraception,
D=d_q1$district_id,
N=1934,
K=max(d_q1$district_id)
)
d_q1$urban
rstan:::rstudio_stanc("week09/09_q1_1.stan")
rstan:::rstudio_stanc("week09/09_q1_1.stan")
?glm
dat_q1 <- data.frame(
use.contraception=d_q1$use.contraception,
district_id = as.factor(d_q1$district),
urban=d_q1$urban
)
glm(use.contraception ~ district_id * urban, family=binomial, data=dat_q1)
q1_a <- glm(use.contraception ~ district_id * urban, family=binomial, data=dat_q1)
summary(q1_a)
?summary
summary(q1_a, digits = 2)
summary(q1_a, correlation = FALSE)
summary.glm(q1_a, correlation = FALSE)
q1_a <- glm(use.contraception ~ district_id * urban, family=binomial, data=dat_q1)
#summary.glm(q1_a, correlation = FALSE)
data(bangladesh)
d_q1 <- bangladesh
d_q1$district_id <- as.integer(as.factor(d_q1$district))
dat_q1 <- data.frame(
use.contraception=d_q1$use.contraception,
district_id = as.factor(d_q1$district),
urban=d_q1$urban
)
dat_list_q1 <- list(
C=d_q1$use.contraception,
D=d_q1$district_id,
U=d_q1$urban,
N=1934,
K=max(d_q1$district_id)
)
model_q1_1_fit <- stan(file='week09/09_q1_1.stan', data=dat_list_q1, cores=4)
model_q1_1_fit
loo(model_q1_1_fit)
summary.glm(q1_a, correlation = FALSE)
q1_a <- glm(use.contraception ~ district_id : urban, family=binomial, data=dat_q1)
summary.glm(q1_a, correlation = FALSE)
loo(model_q1_1_fit)
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(dagitty)
library(ggdag)
library(rstan)
dat_q1 <- data.frame(
use.contraception=d_q1$use.contraception,
district_id = as.factor(d_q1$district),
urban=d_q1$urban
)
dat_q1
head(dat_q1)
head(d)
head(d_q1)
d_q2 <- bangladesh
d_q2
head(d_q2)
d_q2 <- bangladesh
d_q2$district_id <- as.integer(as.factor(d_q2$district))
dat_q2 <- data.frame(
use.contraception=d_q2$use.contraception,
district_id = as.factor(d_q2$district),
age.centered = standardize(d_q2$age.centered),
living.children = standardize(d_q2$living.children),
urban=d_q2$urban
)
dat_list_q2 <- list(
C=dat_q2$use.contraception,
D=dat_q2$district_id,
U=dat_q2$urban,
Ch=dat_q2$living.children,
A=dat_q2$age.centered,
N=1934,
K=max(dat_q2$district_id)
)
dat_list_q2 <- list(
C=dat_q2$use.contraception,
D=dat_q2$district_id,
U=dat_q2$urban,
Ch=dat_q2$living.children,
A=dat_q2$age.centered,
N=1934,
K=max(dat_q2$district_id)
)
d_q2 <- bangladesh
d_q2$district_id <- as.integer(as.factor(d_q2$district))
dat_q2 <- data.frame(
use.contraception=d_q2$use.contraception,
district_id = as.numeric(as.factor(d_q2$district)),
age.centered = standardize(d_q2$age.centered),
living.children = standardize(d_q2$living.children),
urban=d_q2$urban
)
dat_list_q2 <- list(
C=dat_q2$use.contraception,
D=dat_q2$district_id,
U=dat_q2$urban,
Ch=dat_q2$living.children,
A=dat_q2$age.centered,
N=1934,
K=max(dat_q2$district_id)
)
model_q2_1_fit <- stan(file='week09/09_q2_1.stan', data=dat_list_q2, cores=4)
model_q2_1_fit
model_q2_2_fit <- stan(file='week09/09_q2_2.stan', data=dat_list_q2, cores=4)
model_q2_2_fit <- stan(file='week09/09_q2_2.stan', data=dat_list_q2, cores=4)
model_q2_2_fit
rstan:::rstudio_stanc("week09/09_q2_3.stan")
dat_q2$age.centered
d_q2$age.centered
d_q2$living.children
max(d_q2$living.children)
min(d_q2$living.children)
rstan:::rstudio_stanc("week09/09_q2_3.stan")
rstan:::rstudio_stanc("week09/09_q2_3.stan")
rstan:::rstudio_stanc("week09/09_q2_3.stan")
d_q3 <- bangladesh
d_q3$district_id <- as.integer(as.factor(d_q3$district))
dat_q3 <- data.frame(
use.contraception=d_q3$use.contraception,
district_id = as.numeric(as.factor(d_q3$district)),
age.centered = standardize(d_q3$age.centered),
living.children = d_q3$living.children,
urban=d_q3$urban
)
dat_list_q3 <- list(
C=dat_q3$use.contraception,
D=dat_q3$district_id,
U=dat_q3$urban,
Ch=dat_q3$living.children,
A=dat_q3$age.centered,
N=1934,
K=max(dat_q3$district_id)
)
rstan:::rstudio_stanc("week09/09_q3_1.stan")
model_q3_1_fit <- stan(file='week09/09_q3_1.stan', data=dat_list_q2, cores=4)
model_q3_1_fit <- stan(file='week09/09_q3_1.stan', data=dat_list_q3, cores=4)
model_q3_1_fit <- stan(file='week09/09_q3_1.stan', data=dat_list_q3, cores=4)
model_q3_1_fit
model_q3_1_fit
print(231)
sad
a
model_q3_1_fit
model_q2_2_fit
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::install_tinytex()
install.packages('pdflatex')
precis(model_q1_2_fit)
rethinking::precis(model_q1_2_fit)
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(dagitty)
library(ggdag)
library(rstan)
data(bangladesh)
d_q1 <- bangladesh
d_q1$district_id <- as.integer(as.factor(d_q1$district))
dat_q1 <- data.frame(
use.contraception=d_q1$use.contraception,
district_id = as.factor(d_q1$district),
urban=d_q1$urban
)
dat_list_q1 <- list(
C=d_q1$use.contraception,
D=d_q1$district_id,
U=d_q1$urban,
Uid=d_q1$urban + 1L,
N=1934,
K=max(d_q1$district_id)
)
model_q1_1_fit <- stan(file='week09/09_q1_1.stan', data=dat_list_q1, cores=4)
model_q1_1_fit
precis(model_q1_1_fit)
precis(model_q1_1_fit, 2)
?precis
install.packages('lme4')
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
install.packages(statmod)
install.packages('statmod')
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
library(here)
install_cmdstan()
??install_cmdstan
library(cmdstanr)
??install_cmdstan
install_cmdstan()
check_cmdstan_toolchain(fix = TRUE)
install_cmdstan(check_toolchain = TRUE)
install_cmdstan(check_toolchain = FALSE)
m1 <- ulam(
alist(
S ~ dnorm( mu , sigma ),
mu <- a[jid] + w[wid],
a[jid] ~ dnorm(0,0.5),
w[wid] ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=dat_list , chains=4 , cores=4 , cmdstan=TRUE )
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
library(here)
data(Wines2012)
d <- Wines2012
dat_list <- list(
S = standardize(d$score),
jid = as.integer(d$judge),
wid = as.integer(d$wine) )
m1 <- ulam(
alist(
S ~ dnorm( mu , sigma ),
mu <- a[jid] + w[wid],
a[jid] ~ dnorm(0,0.5),
w[wid] ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=dat_list , chains=4 , cores=4 , cmdstan=TRUE )
install_cmdstan()
check_cmdstan_toolchain(fix = TRUE)
c?Error: CmdStan path has not been set yet. See ?set_cmdstan_path.
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
library(here)
data(Wines2012)
d <- Wines2012
dat_list <- list(
S = standardize(d$score),
jid = as.integer(d$judge),
wid = as.integer(d$wine) )
m1 <- ulam(
alist(
S ~ dnorm( mu , sigma ),
mu <- a[jid] + w[wid],
a[jid] ~ dnorm(0,0.5),
w[wid] ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=dat_list , chains=4 , cores=4 , cmdstan=TRUE )
?install_cmdstan()
install_cmdstan(dir=file.path('C:\Users\Public', '.cmdstanr'))
install_cmdstan(dir=file.path("C:\Users\Public", '.cmdstanr'))
install_cmdstan(dir=file.path("C:\Users\Public", ".cmdstanr"))
install_cmdstan(dir=file.path("C:\\Users\\Public", ".cmdstanr"))
install_cmdstan(dir=file.path("C:\\Users\\Public", ".cmdstanr"), check_toolchain = FALSE)
install_cmdstan(dir=file.path("C:\\Users\\Public", ".cmdstanr"), check_toolchain = FALSE)
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
library(here)
library(rethinking)
library(ggplot2)
library(dplyr)
library(tidyr)
library(brms)
library(here)
data(Wines2012)
d <- Wines2012
dat_list <- list(
S = standardize(d$score),
jid = as.integer(d$judge),
wid = as.integer(d$wine) )
m1 <- ulam(
alist(
S ~ dnorm( mu , sigma ),
mu <- a[jid] + w[wid],
a[jid] ~ dnorm(0,0.5),
w[wid] ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=dat_list , chains=4 , cores=4 , cmdstan=TRUE )
install_cmdstan()
set_cmdstan_path('C:\Users\Public\.cmdstanr\cmdstan-2.26.1')
set_cmdstan_path('C:\\Users\\Public\\.cmdstanr\\cmdstan-2.26.1')
m1 <- ulam(
alist(
S ~ dnorm( mu , sigma ),
mu <- a[jid] + w[wid],
a[jid] ~ dnorm(0,0.5),
w[wid] ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=dat_list , chains=4 , cores=4 , cmdstan=TRUE )
coef <- precis(m1,2)
coef$name <- row.names(coef)
coef
?set_cmdstan_path
